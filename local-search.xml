<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>windows环境下搭建开发环境（持续更新...）</title>
    <link href="/2025/01/14/windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-%EF%BC%89/"/>
    <url>/2025/01/14/windows%E7%8E%AF%E5%A2%83%E4%B8%8B%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0-%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="windows环境下搭建开发环境（持续更新…）"><a href="#windows环境下搭建开发环境（持续更新…）" class="headerlink" title="windows环境下搭建开发环境（持续更新…）"></a>windows环境下搭建开发环境（持续更新…）</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><a href="#%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85">环境安装</a></li><li><a href="#%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7">构建工具</a></li><li><a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99">参考资料</a></li></ol><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><p>Windows 10 专业版 22H2 19045.5247</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="jdk下载安装"><a href="#jdk下载安装" class="headerlink" title="jdk下载安装"></a>jdk下载安装</h3><p>以jdk17为例:</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/Adoptium/17/jdk/x64/windows/OpenJDK17U-jdk_x64_windows_hotspot_17.0.13_11.msi" title="jdk17下载链接">下载jdk17</a></p><p>进行安装一直选下一步即可，修改一下安装位置</p><p>验证是否安装成功</p><p>打开<code>cmd</code>,运行<code>java -version</code>，出现以下界面即安装成功<br><img src="/../img/image%20copy.png" title="查看java版本"></p><h3 id="MySQL下载安装"><a href="#MySQL下载安装" class="headerlink" title="MySQL下载安装"></a>MySQL下载安装</h3><p>进入<a href="https://dev.mysql.com/downloads/mysql/8.0.html" title="MySQL官网">MySQL官网</a></p><p>选择下载适合自己系统的版本，我选择的是<code>MySQL Community Server 8.4.3 LTS</code></p><p><img src="/../img/2025-01-14_17%E6%97%B6-08%E5%88%86-12%E7%A7%92.png" title="MySQL下载"></p><p>安装过程一直下一步即可，默认安装路径即可</p><p>验证是否安装成功</p><p>使用数据库连接工具<a href="https://www.navicat.com.cn/download/navicat-premium-lite">Navicat Premium Lite</a></p><p>新建连接能看到数据库即安装成功，首次使用需要填root密码即安装mysql时设置的密码</p><h2 id="构建工具"><a href="#构建工具" class="headerlink" title="构建工具"></a>构建工具</h2><h3 id="Maven安装"><a href="#Maven安装" class="headerlink" title="Maven安装"></a>Maven安装</h3><p>下载<a href="https://maven.apache.org/" title="maven">maven</a></p><p><img src="/../img/2025-01-14_17%E6%97%B6-18%E5%88%86-04%E7%A7%92.png" title="maven下载"></p><p>点击download，选择适合自己系统的版本，我选择的是<code>apache-maven-3.9.9-bin.zip</code></p><p>解压到指定目录，配置环境变量，添加<code>MAVEN_HOME</code>和<code>PATH</code></p><p><code>win+q</code>搜索<code>环境变量</code>，点击<code>编辑系统环境变量</code></p><p>单击<code>环境变量</code>，点击新建，输入<code>MAVEN_HOME</code>，选择解压后的maven目录，点击确定</p><p><img src="/../img/2025-01-14_18%E6%97%B6-24%E5%88%86-30%E7%A7%92.png" title="新建环境变量"></p><p><img src="/../img/2025-01-14_18%E6%97%B6-26%E5%88%86-01%E7%A7%92.png" title="配置环境变量"></p><p>在<code>系统变量</code>中找到<code>Path</code></p><p><img src="/../img/2025-01-14_18%E6%97%B6-28%E5%88%86-04%E7%A7%92.png" title="Path环境变量"></p><p>双击<code>Path</code>，在弹出的窗口中点击<code>新建</code>，输入<code>%MAVEN_HOME%\bin</code>，点击确定</p><p><img src="/../img/2025-01-14_18%E6%97%B6-29%E5%88%86-52%E7%A7%92.png" title="配置Path环境变量"></p><p>验证是否安装成功<br>打开<code>cmd</code>，运行<code>mvn -version</code>，出现以下界面即安装成功</p><p><img src="/../img/2025-01-14_18%E6%97%B6-31%E5%88%86-23%E7%A7%92.png" title="查看maven版本"></p><p>本地仓库配置以及镜像加速</p><p>配置本地仓库，新建一个文件夹，如<code>D:\Env\mavenRepo</code></p><p>在<code>D:\Env\apache-maven-3.9.9\conf</code>目录下找到<code>settings.xml</code>文件，修改以下内容：</p><p>找到<code>localRepository</code>标签，在注释外添加：</p><p><code>&lt;localRepository&gt;D:\Env\mavenRepo&lt;/localRepository&gt;</code></p><p><img src="/../img/2025-01-14_18%E6%97%B6-37%E5%88%86-03%E7%A7%92.png" title="配置本地仓库"></p><p>找到<code>mirrors</code> 标签</p><p><img src="/../img/2025-01-14_18%E6%97%B6-39%E5%88%86-47%E7%A7%92.png" title="配置镜像"></p><p>添加以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- 阿里云仓库 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>alimaven<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>central<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>aliyun maven<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br></code></pre></td></tr></table></figure><p>配置JDK</p><p>找到<code>profiles</code>标签</p><p><img src="/../img/2025-01-14_18%E6%97%B6-42%E5%88%86-10%E7%A7%92.png" title="配置JDK"></p><p>添加以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- java版本 --&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">profile</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>jdk-17<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">activation</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">activeByDefault</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">activeByDefault</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">jdk</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">jdk</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">activation</span>&gt;</span><br> <br>  <span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.source</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.source</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.target</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.target</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span>17<span class="hljs-tag">&lt;/<span class="hljs-name">maven.compiler.compilerVersion</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">profile</span>&gt;</span><br></code></pre></td></tr></table></figure><p>修改完成后进行保存</p><p>验证是否配置成功</p><p><code>win+R</code>快捷键运行<code>cmd</code>，输入<code>mvn help:system</code>测试：</p><p><img src="/../img/2025-01-14_18%E6%97%B6-44%E5%88%86-35%E7%A7%92.png" title="测试maven配置"></p><p>说明成功了</p><h3 id="Gradle安装"><a href="#Gradle安装" class="headerlink" title="Gradle安装"></a>Gradle安装</h3><p><code>win+R</code>快捷键运行<code>cmd</code>，输入<code>java -version</code>查看JDK安装信息，如果有说明JDK安装成功可以进行下一步</p><p>下载Gradle</p><p>采用阿里云镜像下载Gradle，<a href="https://mirrors.aliyun.com/gradle/distributions/v8.11.1/gradle-8.11.1-all.zip" title="gradle-8.11.1">gradle-8.11.1下载地址</a></p><p>解压到指定目录，配置环境变量，添加<code>GRADLE_HOME</code>和<code>PATH</code></p><p><code>win+q</code>搜索<code>环境变量</code>，点击<code>编辑系统环境变量</code></p><p>单击<code>环境变量</code>，点击新建，输入<code>GRADLE_HOME</code>，选择解压后的gradle目录，点击确定</p><p>双击打开<code>Path</code>，在弹出的窗口中点击<code>新建</code>，输入<code>%GRADLE_HOME%\bin</code>，点击确定</p><p>验证Gradle是否安装成功：按Win和R键，输入<code>cmd</code>打开命令提示行。输入<code>gradle -v</code>，如果有下面的版本说明Gradle环境变量配置成功：</p><p><img src="/../img/2025-01-14_18%E6%97%B6-55%E5%88%86-34%E7%A7%92.png" title="gradle版本"></p><p>配置下载源</p><p>打开文件夹<code>D:\Env\gradle-8.11.1\init.d&#39;，新建</code>init.gradle&#96;文件，添加以下内容：</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs fsharp"><span class="hljs-keyword">allprojects</span> &#123;<br>    <span class="hljs-keyword">repositories</span> &#123; <br>        mavenLocal() <br>        <span class="hljs-keyword">maven</span> &#123; name <span class="hljs-string">&quot;Alibaba&quot;</span> ; url <span class="hljs-string">&quot;https://maven.aliyun.com/repository/public&quot;</span> &#125; <br>        <span class="hljs-keyword">maven</span> &#123; name <span class="hljs-string">&quot;Bstek&quot;</span> ; url <span class="hljs-string">&quot;https://nexus.bsdn.org/content/groups/public/&quot;</span> &#125; <br>        mavenCentral()<br>    &#125;<br>    <span class="hljs-keyword">buildscript</span> &#123;<br>        <span class="hljs-keyword">repositories</span> &#123; <br>            <span class="hljs-keyword">maven</span> &#123; name <span class="hljs-string">&quot;Alibaba&quot;</span> ; url <span class="hljs-symbol">&#x27;https</span><span class="hljs-operator">:</span><span class="hljs-comment">//maven.aliyun.com/repository/public&#x27; &#125; </span><br>            <span class="hljs-keyword">maven</span> &#123; name <span class="hljs-string">&quot;Bstek&quot;</span> ; url <span class="hljs-symbol">&#x27;https</span><span class="hljs-operator">:</span><span class="hljs-comment">//nexus.bsdn.org/content/groups/public/&#x27; &#125; </span><br>            <span class="hljs-keyword">maven</span> &#123; name <span class="hljs-string">&quot;M2&quot;</span> ; url <span class="hljs-symbol">&#x27;https</span><span class="hljs-operator">:</span><span class="hljs-comment">//plugins.gradle.org/m2/&#x27; &#125;</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>配置环境变量<code>GRADLE_USER_HOME</code>，对应Gradle本地仓库或工作空间目录（自已创建的指定目录）</p><p><img src="/../img/2025-01-14_18%E6%97%B6-58%E5%88%86-03%E7%A7%92.png" title="配置GRADLE_USER_HOME"></p><p>IDEA 配置Gradle</p><p><img src="/../img/2025-01-14_18%E6%97%B6-59%E5%88%86-11%E7%A7%92.png" title="IDEA配置Gradle"></p><p>点击确定，配置成功，<strong>新建项目的设置也修改一下</strong></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/m0_73804764/article/details/139898041" title="（2024.6.23）最新版MAVEN的安装和配置教程（超详细）">（2024.6.23）最新版MAVEN的安装和配置教程（超详细）</a></p><p><a href="https://blog.csdn.net/qq_43331014/article/details/144644970" title="Gradle安装配置详细教程(Spring源码可用)">Gradle安装配置详细教程(Spring源码可用)</a></p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux初次安装配置</title>
    <link href="/2025/01/12/linux%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/01/12/linux%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="linux初次安装配置"><a href="#linux初次安装配置" class="headerlink" title="linux初次安装配置"></a>linux初次安装配置</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>由于经常要使用到linux环境，所以记录一下初次安装linux需要的配置<br>发行版环境:<code>Ubuntu 24.04 lts</code></p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><a href="#%E5%AE%89%E8%A3%85Linux">安装Linux</a></li><li><a href="#%E9%A6%96%E6%AC%A1root%E5%AF%86%E7%A0%81%E8%AE%BE%E7%BD%AE">首次root密码设置</a></li><li><a href="#ssh%E9%85%8D%E7%BD%AE%E7%99%BB%E5%BD%95">ssh配置登录</a></li></ol><h2 id="安装Linux"><a href="#安装Linux" class="headerlink" title="安装Linux"></a>安装Linux</h2><p>本次只演示安装linux之后的配置，要重新安装linux请参考<a href="https://www.sysgeek.cn/install-ubuntu-24-04-lts/" title="安装 Ubuntu">如何安装 Ubuntu 24.04 LTS 桌面版或服务器</a></p><h2 id="首次root密码设置"><a href="#首次root密码设置" class="headerlink" title="首次root密码设置"></a>首次root密码设置</h2><p><code>sudo passwd root</code>#回车</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nix">[sudo] password for <span class="hljs-params">kerwin:</span> <span class="hljs-comment">#输入当前用户密码</span><br>New <span class="hljs-params">password:</span> <span class="hljs-comment">#输入root新密码</span><br>Retype new <span class="hljs-params">password:</span> <span class="hljs-comment">#再次输入root密码</span><br><span class="hljs-params">passwd:</span> password updated successfully <span class="hljs-comment">#密码更新成功</span><br></code></pre></td></tr></table></figure><p>root密码设置完成了，输入<code>su root</code> 切换到root用户，能切换到证明修改成功</p><h2 id="ssh配置登录"><a href="#ssh配置登录" class="headerlink" title="ssh配置登录"></a>ssh配置登录</h2><h3 id="ssh服务安装"><a href="#ssh服务安装" class="headerlink" title="ssh服务安装"></a>ssh服务安装</h3><p>首先，确保系统已经安装了SSH服务。可以使用以下命令安装openssh-server：</p><p><code>sudo apt-get install openssh-server</code></p><p>安装完成后，可以使用以下命令启动SSH服务：</p><p><code>sudo /etc/init.d/ssh start</code></p><p>为了确保SSH服务在系统启动时自动启动，可以使用systemctl命令:</p><p><code>sudo systemctl enable ssh</code></p><p>设置完成后，可以重启系统以确保设置生效：</p><p><code>reboot</code></p><p><code>systemctl</code>相关命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 单次启动SSH服务</span><br><span class="hljs-built_in">sudo</span> systemctl start ssh<br><span class="hljs-comment"># 单次关闭SSH服务</span><br><span class="hljs-built_in">sudo</span> systemctl stop ssh<br><span class="hljs-comment"># 设置SSH开机自启</span><br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> ssh<br><span class="hljs-comment"># 关闭SSH开机自启</span><br><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">disable</span> ssh<br></code></pre></td></tr></table></figure><h3 id="开启root远程登陆"><a href="#开启root远程登陆" class="headerlink" title="开启root远程登陆"></a>开启root远程登陆</h3><p>需要修改SSH的配置文件以允许root用户登录。使用文本编辑器打开<code>/etc/ssh/sshd_config</code>文件：</p><p><code>sudo vi /etc/ssh/sshd_config</code></p><p>找到以下配置项并修改：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">PermitRootLogin</span> <span class="hljs-literal">yes</span> <span class="hljs-comment"># 允许root用户登录</span><br>PasswordAuthentication <span class="hljs-literal">yes</span> <span class="hljs-comment"># 允许密码登录</span><br></code></pre></td></tr></table></figure><p>修改完成后，需要重启SSH服务以使配置生效：</p><p><code>sudo systemctl restart sshd</code></p><p>最后使用ssh连接工具进行连接，推荐使用<a href="https://github.com/RipplePiam/MobaXterm-Chinese-Simplified/releases" title="MobaXterm汉化版">MobaXterm汉化版</a></p><p><strong>注意是从github下载ssh工具MobaXterm汉化版</strong></p><p>到此配置完成。</p>]]></content>
    
    
    <categories>
      
      <category>linux使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux,Ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo博客搭建+Fluid主题+CloudFlare托管</title>
    <link href="/2025/01/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-Fluid%E4%B8%BB%E9%A2%98-CloudFlare%E6%89%98%E7%AE%A1/"/>
    <url>/2025/01/06/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-Fluid%E4%B8%BB%E9%A2%98-CloudFlare%E6%89%98%E7%AE%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客搭建-Fluid主题-CloudFlare托管"><a href="#Hexo博客搭建-Fluid主题-CloudFlare托管" class="headerlink" title="Hexo博客搭建+Fluid主题+CloudFlare托管"></a>Hexo博客搭建+Fluid主题+CloudFlare托管</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Hexo博客搭建+Fluid主题+CloudFlare托管，是一套完整的博客搭建方案，包括Hexo博客框架、Fluid主题、CloudFlare托管，下面将详细介绍如何搭建Hexo博客，使用Fluid主题，并将博客托管到CloudFlare上。本教程参考b站up主<a href="https://space.bilibili.com/258944527">陶渊xiao明</a>发的视频<a href="https://www.bilibili.com/video/BV1nY6xYmEw7/">从0到1搭建免费个人博客，保姆级教程！无服务器、零代码、国内&#x2F;国外网络，流畅访问！「Cloudflare + GitHub + Hexo」</a>感谢up主的分享。</p><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ol><li><a href="#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C">准备工作</a></li><li><a href="#%E5%AE%89%E8%A3%85nodejs">安装nodejs</a></li><li><a href="#%E5%AE%89%E8%A3%85Hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6">安装Hexo博客框架</a></li><li><a href="#%E5%AE%89%E8%A3%85Git%E5%AE%A2%E6%88%B7%E7%AB%AF">安装Git客户端</a></li><li><a href="#CloudFlare%E8%B4%A6%E6%88%B7">CloudFlare账户</a></li><li><a href="#%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2">开始搭建博客</a></li><li><a href="#%E6%89%98%E7%AE%A1cloudflare">托管cloudflare</a></li><li><a href="#%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E5%AE%9E%E7%8E%B0">博客评论实现</a></li><li><a href="#vscode%E9%85%8D%E7%BD%AE">vscode配置</a></li><li><a href="#%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E8%87%AA%E8%BF%B0%E6%96%87%E4%BB%B6">如何添加自述文件</a></li></ol><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>首先，你需要准备好以下工具：</p><ul><li><a href="#%E5%AE%89%E8%A3%85nodejs">Node.js</a></li><li><a href="#%E5%AE%89%E8%A3%85Hexo%E5%8D%9A%E5%AE%A2%E6%A1%86%E6%9E%B6">Hexo博客框架</a></li><li><a href="#%E5%AE%89%E8%A3%85Git%E5%AE%A2%E6%88%B7%E7%AB%AF">Git客户端</a></li><li><a href="#CloudFlare%E8%B4%A6%E6%88%B7">CloudFlare账户</a></li></ul><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>去<a href="https://nodejs.org/zh-cn" title="Node.js官网">Node.js官网</a>下载安装包，安装完成后，打开命令行，输入<code>node -v</code>,<code>npm -v</code>命令，查看是否安装成功。</p><p><img src="/../img/image.png" title="Node.js查看版本号"></p><p>设置npm镜像源，加速下载，输入<code>npm config set registry https://registry.npmmirror.com</code>命令。</p><h2 id="安装Hexo博客框架"><a href="#安装Hexo博客框架" class="headerlink" title="安装Hexo博客框架"></a>安装Hexo博客框架</h2><p>在命令行输入<code>npm install -g hexo-cli</code>命令，安装Hexo博客框架。</p><p><code>hexo init my-blog</code> # 初始化博客</p><p><code>cd my-blog</code> # 进入博客目录</p><p><code>npm install</code> # 安装依赖</p><h2 id="安装Git客户端"><a href="#安装Git客户端" class="headerlink" title="安装Git客户端"></a>安装Git客户端</h2><p>点击查看教程<a href="https://www.runoob.com/git/git-install-setup.html" title="git安装教程">git安装教程</a></p><p><strong>注意：最好要配置ssh密钥</strong></p><h2 id="CloudFlare账户"><a href="#CloudFlare账户" class="headerlink" title="CloudFlare账户"></a>CloudFlare账户</h2><p>进入<a href="https://www.cloudflare-cn.com/enterprise/" title="CloudFlare官网">CloudFlare官网</a>进行账户注册登录</p><p><strong>不需要使用代理</strong></p><p>进入到这个页面</p><p><img src="/../img/2025-01-06_14-05-10.png" title="CloudFlare Workers 和 Pages"></p><h2 id="开始搭建博客"><a href="#开始搭建博客" class="headerlink" title="开始搭建博客"></a>开始搭建博客</h2><h3 id="1-本地预览博客"><a href="#1-本地预览博客" class="headerlink" title="1. 本地预览博客"></a>1. 本地预览博客</h3><p>在<code>my-blog</code>目录执行命令<code>hexo generate </code>和<code>hexo server</code>预览博客效果。</p><p>点击<a href="http://localhost:4000/" title="博客本地运行地址">博客本地运行地址</a>查看效果。</p><p>因为我已经配置过所以效果不一样，所以我就不贴图了。</p><h3 id="2-部署博客到Github"><a href="#2-部署博客到Github" class="headerlink" title="2. 部署博客到Github"></a>2. 部署博客到Github</h3><p>新建一个仓库，名称为<code>username.github.io</code>，username为你的Github用户名。</p><p><img src="/../img/2025-01-06_16-15-09.png" title="仓库名称及创建"></p><p>在<code>my-blog</code>目录依次执行命令即可:</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">echo</span> <span class="hljs-string">&quot;# username.github.io&quot;</span> &gt;&gt; README.md<br><span class="hljs-symbol">git</span> init<br><span class="hljs-symbol">git</span> <span class="hljs-keyword">add</span> README.md<br><span class="hljs-symbol">git</span> commit -m <span class="hljs-string">&quot;first commit&quot;</span><br><span class="hljs-symbol">git</span> branch -M main<br><span class="hljs-symbol">git</span> remote <span class="hljs-keyword">add</span> origin https:<span class="hljs-comment">//github.com/username/username.github.io.git</span><br><span class="hljs-symbol">git</span> <span class="hljs-keyword">push</span> -u origin main<br></code></pre></td></tr></table></figure><p><img src="/../img/2025-01-06_16-19-07.png" title="仓库初始化"></p><p>会得到这样的界面:</p><p><img src="/../img/2025-01-06_16-24-37.png" title="仓库"></p><p>至此，博客已经部署到github上了。可以通过<code>https://username.github.io</code>访问。</p><h3 id="3-安装Fluid主题"><a href="#3-安装Fluid主题" class="headerlink" title="3. 安装Fluid主题"></a>3. 安装Fluid主题</h3><p>Fluid主题是一款基于Bootstrap的响应式主题，官方网站<a href="https://github.com/fluid-dev/hexo-theme-fluid" title="Fluid">Fluid主题</a>。</p><ol><li><p>Hexo 5.0.0 版本以上，推荐通过 npm 直接安装，进入<code>my-blog</code>目录，执行命令：<code>npm install --save hexo-theme-fluid</code></p></li><li><p>然后在博客目录下创建<code>_config.fluid.yml</code> ，将主题的 <code>_config.yml</code> 内容复制进去 <strong><code>_config.yml</code>不再作为全局配置文件，新的配置文件是<code>_config.fluid.yml</code></strong>。</p></li></ol><p>修改<code>my-blog</code>目录中的 <code>_config.fluid.yml</code>：</p><p><code>theme: fluid</code>  # 指定主题</p><p><code>language: zh-CN</code>  # 指定语言，会影响主题显示的语言，按需修改</p><p>首次使用主题的「关于页」需要手动创建：</p><p><code>hexo new page about</code></p><p>创建成功后，编辑博客目录下 ，修改文件<code>/source/about/index.md</code></p><p><code>title: about</code></p><p><code>layout: about</code></p><p>至此，Fluid主题安装完成。但是我遇到过主题没有生效的问题，把<code>_config.yml</code>删除以后问题得到了解决</p><h3 id="4-发布新博客"><a href="#4-发布新博客" class="headerlink" title="4. 发布新博客"></a>4. 发布新博客</h3><p>第一次使用需要执行命令<code>npm install hexo-deployer-git --save</code></p><p>而后的更新博客只需要<code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code></p><h2 id="托管cloudflare"><a href="#托管cloudflare" class="headerlink" title="托管cloudflare"></a>托管cloudflare</h2><p>登录CloudFlare</p><p>进入<code>Workers 和 Pages</code>新建一个<code>Pages</code></p><p>点击连接到Git</p><p><img src="/../img/2025-01-06_16-49-39.png" title="连接到Git"></p><p>部署站点</p><p><img src="/../img/2025-01-06_16-55-02.png" title="部署站点"></p><p>开始部署</p><p><img src="/../img/2025-01-06_16-55-27.png" title="开始部署"></p><p>部署成功以后进入详情页看到</p><p><img src="/../img/2025-01-06_16-58-34.png" title="CloudFlare给的子域名"></p><p>通过该域名即可访问博客了。</p><p>至此所有工作都做完了，发布自己喜欢的博客吧！</p><p>接下来是扩展功能<code>评论</code>的配置</p><h2 id="博客评论实现"><a href="#博客评论实现" class="headerlink" title="博客评论实现"></a>博客评论实现</h2><p>使用此评论插件<a href="https://github.com/apps/utterances" title="utterances">utterances</a></p><p>进入<a href="https://github.com/apps/utterances">插件网站</a></p><p><img src="/../img/2025-01-06_17-06-42.png" title="utterances插件"></p><p>点击<code>Install</code>按钮安装插件</p><p>然后选择对应仓库</p><p>进入对应仓库的<code>Settings</code> 找到<code>Features</code>选项 打开<code>discussions</code>功能</p><p>修改<code>_config.fluid.yml</code>文件</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">post:</span><br>  <span class="hljs-params">comments:</span><br>  <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">type:</span> utterances<br><span class="hljs-params">utterances:</span><br> <span class="hljs-params">repo:</span> usrname<span class="hljs-symbol">/username.github.io</span><br> <span class="hljs-params">issue_term:</span> title<br> <span class="hljs-params">label:</span> utterances<br> <span class="hljs-params">theme:</span> github-light<br> <span class="hljs-params">theme_dark:</span> github-dark<br> <span class="hljs-params">crossorigin:</span> anonymous<br></code></pre></td></tr></table></figure><h2 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h2><p> 在使用博客项目的时候我发现每次发布博客都需要执行命令<code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code>，有没有什么方法可以自动化发布博客呢？</p><p>答案是肯定的，可以使用vscode的插件<code>Run on Save</code>实现自动化发布博客。</p><p>首先在vscode中安装<code>Run on Save</code>插件</p><p><img src="/../img/2025-01-06_17-14-18.png" title="Run on Save插件"></p><p>然后进入插件的设置<code>settings.json</code></p><p>进行以下设置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;fittencode.languagePreference.displayPreference&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;zh-cn&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;fittencode.languagePreference.commentPreference&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;zh-cn&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;files.autoSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;afterDelay&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;terminal.integrated.defaultProfile.windows&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Command Prompt&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;emeraldwalk.runonsave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-attr">&quot;commands&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">&#123;</span><br>                <span class="hljs-attr">&quot;match&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.md&quot;</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;isAsync&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">&quot;cmd&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span><br>            <span class="hljs-punctuation">&#125;</span><br>        <span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;explorer.confirmPasteNative&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><br>    <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>这样当你保存<code>.md</code>文件的时候，插件就会自动执行<code>hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code>命令。<strong>记得打开vscode的自动保存功能</strong></p><h2 id="如何添加自述文件"><a href="#如何添加自述文件" class="headerlink" title="如何添加自述文件"></a>如何添加自述文件</h2><p>在<code>source</code>文件下新建<code>README.md</code></p><p>修改<code>_config.fluid.yml</code> :<code>skip_render: README.md</code></p><p>因为Hexo默认会渲染<code>README.md</code>文件，所以需要在<code>_config.fluid.yml</code>中添加<code>skip_render: README.md</code>来跳过渲染。</p>]]></content>
    
    
    <categories>
      
      <category>博客搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo, Fluid, CloudFlare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="/2025/01/05/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/01/05/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>这是我的第一篇博客，欢迎大家来阅读！</p>]]></content>
    
    
    <categories>
      
      <category>Life</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Life</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
